# Generated by Django 4.1.7 on 2023-07-24 13:16
import json

from django.conf import settings
from django.db import migrations


def set_last_updater_for_old_accesses(apps, schema_editor):
    apiRequestLog = apps.get_model('rest_framework_tracking', 'APIRequestLog')
    access_model = apps.get_model('accesses', 'Access')
    db_alias = schema_editor.connection.alias

    update_accesses_logs = apiRequestLog.objects.using(db_alias).filter(method="PATCH",
                                                                        view_method__in=("close", "partial_update"),
                                                                        status_code="200",
                                                                        view__icontains="accesses.views.access")\
                                                                .order_by("requested_at")\
                                                                .values("user_id", "response")
    accesses_updaters = {}
    for log in update_accesses_logs:
        response = json.loads(log.get("response"))
        access_id = response.get("id")
        accesses_updaters[access_id] = log.get("user_id")

    for access_id, user_id in accesses_updaters.items():
        access = access_model.objects.using(db_alias).filter(id=access_id).first()
        if access:
            access.updated_by_id = user_id
            access.save()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accesses', '0003_access_created_by_access_updated_by'),
    ]

    operations = [
        migrations.RunSQL(sql="""UPDATE accesses_access a
                                 SET created_by = l.user_id
                                 FROM rest_framework_tracking_apirequestlog l
                                 WHERE l.method = 'POST' AND
                                 l.view ILIKE '%accesses.views.access%' AND
                                 l.view_method = 'create' AND
                                 l.status_code = '201' AND
                                 a.id = TRIM(BOTH ',' FROM SUBSTRING(l.response FROM 7 FOR 4))::int""",
                          reverse_sql="UPDATE accesses_access SET created_by= NULL WHERE created_by IS NOT NULL"
                          ),
        migrations.RunPython(code=set_last_updater_for_old_accesses)
    ]
