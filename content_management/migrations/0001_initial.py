# Generated by Django 5.0.9 on 2025-02-24 10:12

import django.db.models.deletion
from django.db import migrations, models


def insert_release_notes(apps, schema_editor):
    ReleaseNote = apps.get_model('admin_cohort', 'ReleaseNote')
    Content = apps.get_model('content_management', 'Content')
    db_alias = schema_editor.connection.alias

    release_notes = ReleaseNote.objects.using(db_alias).all()
    for note in release_notes:
        content_text = "\n".join([f"- {msg}" for msg in note.message]) + (f"\n\n**{note.author}**" if note.author else "")
        content = Content.objects.using(db_alias).create(
            title=note.title,
            content=content_text,
            deleted_at=note.delete_datetime,
            page='accueil',
            content_type='RELEASE_NOTE'
        )
        content.created_at = note.insert_datetime
        content.save()


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('page', models.CharField(max_length=100)),
                ('content_type', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name',
                 models.CharField(choices=[('order', 'ORDER'), ('style', 'STYLE'), ('tags', 'TAGS')], max_length=50)),
                ('value', models.CharField(max_length=255)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata',
                                              to='content_management.content')),
            ],
            options={
                'unique_together': {('content', 'name')},
            },
        ),
        migrations.RunPython(code=insert_release_notes)
    ]
